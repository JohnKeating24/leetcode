class Solution {
public:
    void solveSudoku(vector<vector<char>>& board) {
        if(solve(board)) return;
    }
    bool solve(vector<vector<char>> &board){
        for(int i=0;i<9;i++)
            for(int j=0;j<9;j++)
                if(board[i][j]=='.'){
                    for(int k=1;k<=9;k++){
                        board[i][j]=k+'0';
                        if(isValid(i,j,board) && solve(board))
                            return true;
                        board[i][j]='.';
                    }
                    return false;
                }
        return true;
    }
    bool isValid(int x,int y,vector<vector<char>> &board){
        int i=0,j=0;
        for(j=0;j<9;j++)
            if(j!=y && board[x][y]==board[x][j]) return false;
        for(i=0;i<9;i++)
            if(i!=x && board[x][y]==board[i][y]) return false;
        for(i=3*(x/3);i<3*(x/3+1);i++)
            for(j=3*(y/3);j<3*(y/3+1);j++)
                if(i!=x && j!=y && board[x][y]==board[i][j]) return false;
        return true;
    }
};
