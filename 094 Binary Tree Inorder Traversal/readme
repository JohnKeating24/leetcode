/*
1 时间复杂度 O(n),空间复杂度 O(1)？
2 算法原理：
  1 中序遍历要保证 左中右 的次序，故对每一个root节点，一直将其左孩子入栈，直到为空；
  访问时，先访问弹出节点cur，再访问cur右孩子。
3 算法步骤：
  1 将头节点作为当前节点
  2 若当前节点不为空：将当前节点压入栈，若当头节点的左孩子不为空，压入栈
    若当前节点为空：栈弹出节点作为当前节点cur，cur值返回结果，同时cur更新为右孩子：cur=cur->right;
  3 重复步骤2，直到栈空、或cur为空
4 注意：2的循环条件是(!s.empty() || p!=nullptr),其中p!=nullptr是让第一次进入；
  p=p->right隐含了更新后的p可能为空。
*/
