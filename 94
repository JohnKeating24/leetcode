/*
1 时间复杂度 O(n),空间复杂度 O(1)？
2 算法原理：
  1 后序遍历要保证左右中的次序，故对每一个root节点，要先完成对其左、右孩子的访问，且左孩子要先于右孩子的访问，才能访问root节点。
  故对每一个root节点，
	2 若其右孩子已经访问，则访问root；否则先将root压入cur，首先访问root的右孩子(队列结构的设计使得自动先访问了左孩子)。
3算法步骤：
  1 将头节点作为当前节点
  2 将当前节点入栈，若其左孩子存在：将其左孩子入栈；直到左孩子为空
  3 弹出当前节点cur，此时分两种情况：
    1 若当前节点cur的右孩子已经访问，则访问当前节点
    2 若当前节点cur的右孩子没有访问，则将当前节点cur入栈，先访问当前节点的右孩子：此时重复步骤2、3
  4 重复2、3，直到栈为空
4 用do-while；3.2中用break跳出当前循环；击败1.5%;last节点：在每次刚进入时为空，每次更新后为上一次的cur。
*/
