class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int> > path(m, vector<int> (n, 1));
        for (int i = 1; i < m; i++)
            for (int j = 1; j < n; j++)
                path[i][j] = path[i - 1][j] + path[i][j - 1];
        return path[m - 1][n - 1];
    }
};

// 注意，初始赋值为1,实际上只有第一行和第一列有效。


class Solution {
public:
    int uniquePaths(int m, int n) {
        if (m > n) return uniquePaths(n, m);
        vector<int> f(m, 1);
        for (int j = 1; j < n; j++)
            for (int i = 1; i < m; i++)
                f[i] = f[i - 1]+ f[i]; 
        return f[m - 1];
    }
}; 

// f[i] = f[i - 1]+ f[i]等式右边：  f[j-1] 代表f[i-1][j],f[j] 代表f[i][j-1]
