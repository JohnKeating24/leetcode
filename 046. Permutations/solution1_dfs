class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> result;
        vector<int> path;
        dfs(path,result,nums);
        return result;
    }
    void dfs(vector<int> &path,vector<vector<int>> &result,vector<int> &nums){
        if(path.size()==nums.size()){
            result.push_back(path);
            return;
        }
        for(auto n:nums){
            auto pos=find(path.begin(),path.end(),n);
            if(pos==path.end()){
                path.push_back(n);
                dfs(path,result,nums);
                path.pop_back();
            }
        }
    }
};
